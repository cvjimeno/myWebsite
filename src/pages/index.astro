---
// src/pages/index.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import HeroSection from '../components/sections/HeroSection.astro';
import AboutMeSnapshot from '../components/sections/AboutMeSnapshot.astro';
import { getCollection } from 'astro:content';
import NewsletterCTA from '../components/blog/NewsletterCTA.astro';
import AboutMe from '../components/sections/AboutMe.astro';
import PostCard from '../components/cards/PostCard.astro';
// --- This is the new, dynamic data fetching ---

// 1. Find all possible hero images (same logic as the blog page)
const allHeroImages = import.meta.glob('/src/assets/images/blog/hero/*.{jpeg,jpg,png,gif,webp}');

// 2. Fetch all non-draft blog posts from your content collection
const allPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});

// 3. Sort the posts by date to find the newest ones
const sortedPosts = allPosts.sort((a, b) => 
  new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
);

// 4. Get just the 3 latest posts
const latestPosts = sortedPosts.slice(0, 3);

// 5. Process these 3 posts to attach their resolved images
const postsWithImages = await Promise.all(
  latestPosts.map(async (post) => {
    const imagePath = post.data.heroImage;
    if (!allHeroImages[imagePath]) {
      throw new Error(`[index.astro] Hero image for post "${post.slug}" not found. Path: "${imagePath}"`);
    }
    const resolvedImage = (await allHeroImages[imagePath]()).default;
    return {
      ...post,
      data: { ...post.data, heroImageResolved: resolvedImage }
    };
  })
);
---

<BaseLayout title="Inicio"
  description="El hogar digital de Carlos Velasco. Un científico y programador explorando la intersección de la tecnología y la Inteligencia Artificial. Conoce mi trabajo y lee mis últimos artículos."
>
  <HeroSection />
  <AboutMe />
    
  <section class="py-12 md:py-20 px-4 sm:px-6 lg:px-8">
    <div class="container mx-auto">
      <div class="text-center mb-10 md:mb-16">
        <div class="relative inline-block mx-auto">
          {/* THE FONT SIZE FIX: Using a more robust responsive size */}
          <h2 class="text-3xl md:text-5xl font-semibold text-text-primary mb-2">
            Últimos posts de mi Blog
          </h2>
          {/* THE UNDERLINE FIX: Adjusted width and position for the new font size */}
          <div class="absolute -bottom-1 left-1/2 -translate-x-1/2 w-[calc(100%+1rem)]"> 
            <svg width="100%" height="26" viewBox="0 0 676 26" fill="none" xmlns="http://www.w3.org/2000/svg" class="opacity-75 block mx-auto">
              <path d="M57.803 16.6015C63.1302 16.0602 73.4284 15.92 79.0932 15.8422C79.1971 15.8406 79.301 15.839 79.4049 15.8374C80.7493 15.8189 82.0207 15.7873 83.5102 15.7498C87.062 15.6604 91.8607 15.5398 101.882 15.4942C104.796 15.4001 107.71 15.31 110.624 15.2248C111.372 15.203 112.12 15.1813 112.868 15.1597C143.587 14.276 174.315 13.6853 205.045 13.1499C205.442 13.1361 205.847 13.122 206.255 13.1078C212.351 12.896 219.577 12.6447 225.387 12.5221C227.097 12.4859 228.685 12.461 230.084 12.4515C237.908 12.3983 243.222 12.4066 247.588 12.4204C272.59 11.9852 297.592 11.5142 322.589 10.8794C327.701 10.7496 332.813 10.6128 337.924 10.4681C340.647 10.391 343.369 10.3117 346.092 10.23C353.305 10.0136 360.52 9.78468 367.733 9.545C371.931 9.33464 375.922 9.11465 379.623 8.91072C384.823 8.62417 389.453 8.36933 393.279 8.21664C402.497 7.84876 412.962 7.67815 420.732 7.55155C422.002 7.53086 423.201 7.51137 424.31 7.49236C430.478 7.25431 436.646 7.01252 442.814 6.76957C443.227 6.78937 443.643 6.81044 444.066 6.83215C445.985 6.93067 448.062 6.96696 450.419 6.95817C454.542 6.94278 459.52 6.78934 466.003 6.58987C470.44 6.45337 475.582 6.29544 481.636 6.14509C485.538 6.04821 487.547 6.15827 489.188 6.248C489.671 6.2744 490.124 6.29903 490.582 6.31617C492.152 6.37488 493.801 6.21125 495.748 6.01799C498.274 5.76727 501.305 5.46624 505.323 5.53602C518.126 5.75838 523.748 5.17986 528 4.74215C529.247 4.61377 530.378 4.49767 531.536 4.41733C535.293 4.15689 540.657 4.14376 544.713 4.22446C547.929 4.28844 554.35 3.93857 559.217 3.59201C560.254 3.51812 561.499 3.46171 562.913 3.41058C564.007 3.37102 565.203 3.33461 566.483 3.29573C569.52 3.20349 573.034 3.09729 576.791 2.9001C586.284 2.40184 591.329 2.14747 595.385 1.94333C596.542 1.88514 597.619 1.83144 598.695 1.77685C602.095 1.60433 606.315 1.42023 610.588 1.23417C615.701 1.01151 620.891 0.785686 624.839 0.572407C635.08 0.372396 645.324 0.197315 655.566 0.0227957C660.827 -0.0661588 665.883 0.154994 669.62 0.654597C673.355 1.15471 675.468 1.88774 675.491 2.71081C675.516 3.53383 673.45 4.38908 669.75 5.10711C666.05 5.82465 661.015 6.34241 655.758 6.56246C645.168 7.00432 634.576 7.44718 623.984 7.86412C611.082 8.372 598.178 8.84159 585.272 9.22471C577.883 9.44405 570.494 9.65055 563.105 9.84635C561.465 9.8898 559.825 9.93273 558.185 9.97514C557.256 9.99919 556.326 10.0229 555.396 10.0466C547.818 10.4752 540.253 10.8853 534.922 11.1102C530.519 11.2959 527.305 11.2836 524.553 11.2733C522.659 11.2661 520.983 11.2598 519.289 11.3194C518.38 11.3514 517.137 11.4011 515.639 11.4609C509.522 11.7051 499.132 12.1201 489.645 12.2063C485.435 12.2446 480.543 12.2181 475.872 12.1928C469.193 12.1566 462.965 12.1231 459.826 12.2849C456.9 12.4358 453.743 12.5318 450.588 12.6004C447.802 12.6609 445.017 12.7002 442.395 12.7371C437.061 12.8122 432.397 12.878 429.749 13.0947C426.585 13.3537 423.881 13.368 419.861 13.3898C417.073 13.4048 413.651 13.4238 409.003 13.5296C403.636 13.6518 399.837 13.651 396.607 13.6503C392.062 13.6493 388.643 13.6486 383.556 13.9916C377.906 14.3726 371.998 14.6845 367.34 14.7576C365.219 14.7909 362.793 14.8711 360.269 14.9546C356.928 15.0652 353.413 15.1813 350.202 15.2018C347.556 15.2188 345.365 15.1246 343.427 15.0412C342.822 15.0152 342.242 14.9905 341.68 14.9703C340.474 15.0076 339.268 15.0453 338.062 15.0834C337.162 15.1119 336.262 15.1406 335.362 15.1696C335.021 15.2056 334.664 15.2448 334.29 15.2854C332.417 15.4892 330.114 15.7394 327.258 15.9152C322.738 16.1935 318.766 16.2232 314.575 16.2539C311.313 16.2778 307.918 16.3024 304.03 16.4465C301.379 16.5447 298.361 16.7005 295.37 16.8548C290.927 17.0839 286.54 17.3098 283.488 17.341C282.344 17.3526 281.359 17.2817 280.384 17.2109C280.379 17.2104 280.375 17.2099 280.371 17.2095C280.305 17.2047 280.238 17.2 280.172 17.1953C272.746 17.4938 265.319 17.8001 257.893 18.1106C257.25 18.1556 256.601 18.2004 255.957 18.2447C252.81 18.461 249.753 18.6712 247.763 18.8995C245.605 19.1469 240.171 19.4153 234.444 19.6981C231.438 19.8465 228.35 19.9989 225.614 20.1543C224.936 20.1928 224.28 20.2314 223.652 20.2702C221.803 20.3846 220.043 20.3335 218.233 20.2806C216.544 20.2312 214.81 20.1806 212.918 20.262C211.971 20.3028 210.948 20.376 209.857 20.4543C208.896 20.5232 207.88 20.5961 206.816 20.6538C205.828 20.7075 203.623 20.7165 200.796 20.7287C199.049 20.7362 197.063 20.745 194.98 20.7655C189.479 20.9931 183.976 21.2178 178.475 21.438C177.33 21.5626 176.337 21.7097 175.553 21.884C174.99 22.0091 174.512 22.1529 174.021 22.2999C173.353 22.5 172.662 22.7068 171.706 22.8837C170.959 23.0219 170.075 23.0943 169.479 23.0636C169.202 23.0493 168.988 23.0133 168.794 22.9807C168.572 22.9433 168.373 22.9102 168.132 22.9184C167.959 22.9244 167.779 22.9608 167.558 23.005C167.204 23.0755 166.745 23.1667 166.043 23.1901C163.428 23.2776 160.456 23.3404 157.544 23.4017C154.306 23.4699 151.141 23.5367 148.621 23.634C145.797 23.7431 141.77 23.7461 137.735 23.7496C134.921 23.752 132.102 23.7548 129.685 23.793C127.317 23.8303 124.853 23.9664 122.468 24.0986C119.604 24.2573 116.85 24.4102 114.505 24.3776C114.127 24.3722 113.676 24.3029 113.133 24.2069C112.993 24.1822 112.848 24.1558 112.696 24.1282C112.17 24.0326 111.564 23.9235 110.875 23.8267C107.894 23.9138 104.911 23.9958 101.929 24.0733C101.825 24.0934 101.717 24.1138 101.609 24.1346C101.607 24.1351 101.605 24.1355 101.604 24.136C99.1663 24.6053 95.8309 25.2473 91.1131 25.0598C89.9138 25.0121 89.1559 24.8816 88.4731 24.7641C87.8025 24.6488 87.2032 24.5456 86.3303 24.5456C85.3388 24.5457 84.1717 24.6625 82.8994 24.7895C81.1128 24.9679 79.1173 25.1671 77.1069 25.094C76.9697 25.089 76.822 25.0834 76.6683 25.078C75.2112 25.0268 73.0541 24.951 70.9035 24.7348C64.5447 24.8449 58.1848 24.9418 51.8254 25.0304C41.2249 25.178 30.6216 25.3024 20.0215 25.4256C14.8644 25.4844 9.91002 25.2468 6.24776 24.7442C2.58547 24.2407 0.514151 23.5183 0.492431 22.7108C0.468424 21.9033 2.4952 21.0647 6.12241 20.3532C9.74994 19.6425 14.6822 19.1222 19.8341 18.8858C28.2351 18.5018 36.6387 18.1168 45.0409 17.7424C45.481 17.7129 45.9229 17.684 46.363 17.6561C49.6366 17.4484 52.6704 17.1333 55.7064 16.8178C56.4037 16.7454 57.1024 16.6727 57.803 16.6015Z" fill="var(--color-accent-highlight)"/>
            </svg>
          </div>
        </div>
        <p class="text-text-secondary text-lg mt-4 md:mt-5">
          Explora, aprende y comparte ideas conmigo :)
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10">
        {postsWithImages.map(post => (
          <PostCard post={post}  />
        ))}
      </div>
    </div>
  </section>

  <div class="mt-20">
    <NewsletterCTA theme="highlight" /> {/* Change theme="orange" to variant="highlight" */}
  </div>
</BaseLayout>