---
// src/components/common/SocialIcon.astro
// A robust component for loading custom local SVGs.

// 1. Create a map of your social icons.
//    Astro's import.meta.glob is perfect for this.
const allSocialIcons = import.meta.glob('/src/assets/icons/*.svg', { as: 'raw' });

export interface Props {
  name: string;
  class?: string;
}

const { name, class: className } = Astro.props;

// 2. Construct the path and check if the icon exists.
const iconPath = `/src/assets/icons/${name}.svg`;
if (!allSocialIcons[iconPath]) {
  console.error(`Social icon "${name}" not found in /src/assets/icons/`);
}

let svgContent = '';
let viewBox = '0 0 24 24'; // A sensible default

if (allSocialIcons[iconPath]) {
  const rawSvg = await allSocialIcons[iconPath]();

  // 3. Extract the inner content (same logic as your old component).
  const contentMatch = rawSvg.match(/<svg[^>]*>([\s\S]*)<\/svg>/);
  svgContent = contentMatch ? contentMatch[1] : '';

  // 4. Extract the viewBox attribute (same logic as your old component).
  const viewBoxMatch = rawSvg.match(/viewBox="([^"]*)"/);
  if (viewBoxMatch) {
    viewBox = viewBoxMatch[1];
  }
}
---

<svg 
  class:list={["inline-block fill-current", className]} 
  viewBox={viewBox}  
  xmlns="http://www.w3.org/2000/svg"
  set:html={svgContent} 
/>