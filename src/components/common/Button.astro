---
// src/components/common/Button.astro
export interface Props {
  href: string;
  variant?: 'primary' | 'secondary' | 'custom'; // Add more variants as needed
  size?: 'sm' | 'md' | 'lg';
  class?: string; // Allow passing additional custom classes
  target?: '_blank' | '_self' | '_parent' | '_top'; // For link target
  rel?: string; // For link rel attribute
  // Add any other props you might need, like `onClick` if it were a client-side JS button
}

const { 
  href, 
  variant = 'primary', // Default to primary if no variant is specified
  size = 'md', 
  class: customClass,
  target,
  rel
} = Astro.props;

// Base classes common to all buttons
const baseClasses = "inline-block font-medium rounded-lg transition-all duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 whitespace-nowrap";

// Size specific classes
let sizeClasses = "";
switch (size) {
  case 'sm':
    sizeClasses = "px-4 py-2 text-sm"; // Adjust padding and text size as per your Figma small button
    break;
  case 'lg':
    sizeClasses = "px-8 py-3 text-lg"; // Adjust padding and text size as per your Figma large button
    break;
  case 'md': // Default size
  default:
    sizeClasses = "px-6 py-2.5 text-base"; // Your default button size (e.g., 16px text, ~10px T/B, ~24px L/R padding)
                                         // This matches your Figma Hero buttons roughly (16px text, 10px V padding, 16px H padding)
                                         // py-2.5 is 10px. px-6 is 24px. Adjust to match your Figma precisely.
                                         // For your Figma Hero buttons (16px text, 10px V padding, 16px H padding):
                                         // sizeClasses = "px-4 py-2.5 text-base"; 
    break;
}

let variantClasses = "";
switch (variant) {
  case 'secondary':
    variantClasses = `
      bg-transparent 
      border-2 border-accent-primary 
      text-accent-primary 
      hover:bg-accent-primary-bg  // Subtle background on hover
      focus:ring-accent-primary
    `;
    break;
  case 'custom':
    variantClasses = "";
    break;
  case 'primary':
  default:
    variantClasses = `
      bg-[var(--color-accent-primary)] 
      text-[var(--color-button-text)]     // <-- FIX IS HERE: Use the new variable
      hover:bg-[var(--color-accent-primary-hover)]  
      focus:ring-[var(--color-accent-primary)]
      shadow-md hover:shadow-lg
    `;
    break;
}
---

<a 
  href={href}
  class:list={[baseClasses, sizeClasses, variantClasses, customClass]}
  target={target}
  rel={target === '_blank' ? (rel || "noopener noreferrer") : rel}
>
  <slot />
</a>