---
// src/components/cards/CoffeeCard.astro (CONTRAST FIX)
import { Image } from "astro:assets";
import Icon from "../common/Icon.astro";
import Mokka from "../../assets/images/illustrations/mokka.webp";

const startDate = new Date('2008-09-15');
---
<div class="relative w-full h-full p-4 flex flex-col overflow-hidden" style="background: linear-gradient(135deg, #EAE2D8, #C8B6A2);">
  
  <!-- THE FIX: Using a much darker, higher-contrast color for text -->
  <div class="flex items-center gap-x-2 z-10">
    <Icon name="lucide:coffee" class="w-5 h-5 text-[#3D2B1F]" />
    <h3 class="font-semibold text-[#3D2B1F] text-sm">
      Cafés tomados en mi vida...
    </h3>
  </div>

  <div class="flex-grow flex items-center justify-center text-center z-10">
    <p class="flex items-baseline text-md text-[#3D2B1F]/90">
      <!-- THE FIX: Made the number bolder and darker -->
      <span id="coffee-counter" class="font-bold text-3xl text-[#3D2B1F] leading-none mr-2">
      </span>
      <span>y subiendo.</span>
    </p>
  </div>

  <div class="absolute -bottom-5 -right-5 z-0">
    <Image 
      src={Mokka} 
      alt="Ilustración de una cafetera Moka" 
      width={100} 
      height={100}
      format="webp"
      quality={80}
      class="w-24 h-auto opacity-25"
    />
  </div>
</div>

<script define:vars={{ startDate: startDate.toISOString() }}>
  const counterElement = document.getElementById('coffee-counter');
  
  if (counterElement) {
    const start = new Date(startDate);
    const now = new Date();
    const diffTime = Math.abs(now - start);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    
    const coffeesPerDay = 1.4;
    const totalCoffees = Math.ceil( diffDays * coffeesPerDay);
    
    let startValue = Math.max(0, totalCoffees - 200);
    const step = () => {
      if (startValue < totalCoffees) {
        startValue += 5;
        if (startValue > totalCoffees) {
          startValue = totalCoffees;
        }
        counterElement.textContent = startValue.toLocaleString('es-ES');
        requestAnimationFrame(step);
      }
    };
    
    requestAnimationFrame(step);
  }
</script>