---
// src/components/common/SocialIcon.astro (CORRECTED FOR VITE'S NEW GLOB IMPORT)

const allSocialIcons = import.meta.glob('/src/assets/icons/*.svg', { query: '?raw' });

export interface Props {
  name: string;
  class?: string;
  color?: string;
}

const { name, class: className, color } = Astro.props;

let svgContent = '';
let viewBox = '0 0 24 24';

const iconPath = `/src/assets/icons/${name}.svg`;
if (!allSocialIcons[iconPath]) {
  console.error(`Social icon "${name}" not found in /src/assets/icons/`);
} else {
  // The imported result is a module, not a raw string
  const importedModule = await allSocialIcons[iconPath]();
  // THE FIX: The raw SVG string is now in the .default property
  const rawSvg = importedModule.default;

  const contentMatch = rawSvg.match(/<svg[^>]*>([\s\S]*)<\/svg>/);
  const viewBoxMatch = rawSvg.match(/viewBox="([^"]*)"/);

  if (viewBoxMatch) {
    viewBox = viewBoxMatch[1];
  }

  if (contentMatch) {
    let tempContent = contentMatch[1];
    
    if (color !== 'original') {
      tempContent = tempContent
        .replace(/ fill="[^"]*"/g, '')
        .replace(/ stroke="[^"]*"/g, '');
    }
    svgContent = tempContent;
  }
}

const svgClasses = ['inline-block'];
let svgStyle = '';

if (color && color !== 'original') {
  svgStyle = `color: ${color};`;
  svgClasses.push('fill-current');
} else if (!color) {
  svgClasses.push('fill-current');
}

if (className) {
  svgClasses.push(className);
}
---
<svg 
  class:list={svgClasses} 
  viewBox={viewBox}  
  xmlns="http://www.w3.org/2000/svg"
  style={svgStyle}
  set:html={svgContent} 
/>