---
// src/layouts/BlogPostLayout.astro (FINAL, CORRECTED VERSION)
import BaseLayout from './BaseLayout.astro';
import { Image, getImage } from 'astro:assets';
import TableOfContents from '../components/TableOfContents.astro';
import ArticleEpilogue from '../components/blog/ArticleEpilogue.astro';
import NewsletterCTA from '../components/blog/NewsletterCTA.astro';
import Badge from '../components/common/Badge.astro';
import Icon from '../components/common/Icon.astro';
import ReadingProgressBar from '../components/blog/ReadingProgressBar.astro';
import RelatedPosts from '../components/blog/RelatedPosts.astro';

const { frontmatter, headings } = Astro.props;

const formattedDate = new Date(frontmatter.pubDate).toLocaleDateString('es-ES', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
const readingTimeText = `${frontmatter.readingTime} min de lectura`;

const allHeroImages = import.meta.glob('/src/assets/images/blog/hero/*.{jpeg,jpg,png,gif,webp}');
if (!allHeroImages[frontmatter.heroImage]) {
  throw new Error(`Hero image not found for post "${frontmatter.slug}". Path: ${frontmatter.heroImage}.`);
}
const heroImageResolved = (await allHeroImages[frontmatter.heroImage]()).default;

const ogImageUrl = (await getImage({
  src: heroImageResolved,
  width: 1200,
  height: 630,
  format: 'webp',
  quality: 80,
})).src;
---
<BaseLayout 
  title={frontmatter.title}
  description={frontmatter.description}
  image={ogImageUrl}
  pubDate={frontmatter.pubDate}
  type="article"
>
  <!-- THE FIX #1: The horizontal bar is now hidden on large screens (`lg:`) and up. -->
  <ReadingProgressBar class="lg:hidden" />

  <article>
    <header class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center pt-12 md:pt-16 pb-8">
      <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-text-primary leading-tight mb-6">{frontmatter.title}</h1>
      <div class="flex flex-wrap items-center justify-center gap-x-4 gap-y-2 text-base text-text-secondary mb-8">
        <span>{formattedDate}</span>
        <span class="text-gray-400">â€¢</span>
        <div class="flex items-center gap-x-1.5">
          <Icon name="lucide:clock" class="w-4 h-4" />
          <span>{readingTimeText}</span>
        </div>
      </div>
      <div class="flex flex-wrap items-center justify-center gap-2">
        <Badge text={frontmatter.category} variant="category" />
        {frontmatter.tags && frontmatter.tags.map(tag => (
          <Badge text={tag} variant="tag" />
        ))}
      </div>
    </header>

    <div class="w-full mb-12 md:mb-16">
      <Image src={heroImageResolved} alt={frontmatter.imageAlt} widths={[800, 1200, 1600]} sizes="100vw" class="w-full max-h-[500px] object-cover"/>
    </div>

    <main class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 lg:grid-cols-4 lg:gap-x-12">
        <!-- THE FIX #2: The entire aside (including the "En este post" title) is hidden on small screens. -->
        <aside class="hidden lg:block lg:col-span-1 mb-12 lg:mb-0">
          <div class="sticky top-24">
            <h2 class="text-lg font-semibold text-text-primary mb-4">En este post</h2>
            <TableOfContents headings={headings} />
          </div>
        </aside>
        <div id="article-body" class="lg:col-span-3 prose prose-lg max-w-none text-text-primary dark:text-text-primary">
          <slot />
          <ArticleEpilogue />
        </div>
      </div>
    </main>
  </article>

  <div class="mt-8">
    <RelatedPosts 
      currentPostSlug={frontmatter.slug} 
      currentPostTags={frontmatter.tags}
      currentPostCategory={frontmatter.category}
    />
  </div>

  <div class="mt-8">
    <NewsletterCTA theme="highlight"/>
  </div>
</BaseLayout>

<script>
// THE FIX #3: The script is now more robust and efficient.
  const handleScroll = () => {
    const articleBody = document.querySelector('#article-body');
    if (!articleBody) return;

    // We still calculate the progress value for both indicators
    const scrollTop = window.scrollY;
    const articleTop = (articleBody as HTMLElement).offsetTop;
    const articleHeight = articleBody.scrollHeight;
    const viewportHeight = window.innerHeight;
    const scrollableDistance = articleHeight - viewportHeight;

    if (scrollableDistance <= 0) {
      document.documentElement.style.setProperty('--scroll-progress', '0%');
      return;
    }
    
    const progress = Math.max(0, Math.min(100, ((scrollTop - articleTop) / scrollableDistance) * 100));
    
    // Update the vertical ToC bar (it only exists on desktop, but the CSS var is harmless on mobile)
    document.documentElement.style.setProperty('--scroll-progress', `${progress}%`);

    // Only update the horizontal bar if it actually exists in the DOM
    const progressBar = document.getElementById('progress-bar');
    if (progressBar) {
      progressBar.style.width = `${progress}%`;
    }
  };

  const handleActiveLink = () => {
    // This logic correctly runs only on desktop already. No changes needed.
    if (window.innerWidth < 1024) return;
    
    const tocLinks = document.querySelectorAll('#toc-list li');
    const headings = document.querySelectorAll('#article-body h2[id], #article-body h3[id]');
    if (tocLinks.length === 0 || headings.length === 0) return;

    let currentActiveId = '';
    for (const heading of headings) {
        const headingTop = heading.getBoundingClientRect().top;
        if (headingTop < 150) { // Using 150px from top as the activation line
            currentActiveId = heading.id;
        } else {
            break;
        }
    }

    tocLinks.forEach(link => {
      link.classList.toggle('toc-active', link.id === `toc-${currentActiveId}`);
    });
  }
  
  const onScroll = () => {
    // Request animation frame for smoother performance
    window.requestAnimationFrame(() => {
      handleScroll();
      handleActiveLink();
    });
  }

  // Set up event listeners correctly for Astro's View Transitions
  document.addEventListener('astro:page-load', () => {
    onScroll(); // Run once on load to set initial state
    document.addEventListener('scroll', onScroll, { passive: true });
  });

  document.addEventListener('astro:before-swap', () => {
    document.removeEventListener('scroll', onScroll);
  });
</script>
